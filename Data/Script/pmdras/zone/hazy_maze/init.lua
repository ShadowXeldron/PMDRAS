--[[
    init.lua
    Created: 07/16/2024 16:15:22
    Description: Autogenerated script file for the map hazy_maze.
]]--
-- Commonly included lua functions and data
require 'origin.common'

-- Package name
local hazy_maze = {}

-------------------------------
-- Zone Callbacks
-------------------------------
---hazy_maze.Init(zone)
--Engine callback function
function hazy_maze.Init(zone)


end

---hazy_maze.EnterSegment(zone, rescuing, segmentID, mapID)
--Engine callback function
function hazy_maze.EnterSegment(zone, rescuing, segmentID, mapID)


end

---hazy_maze.ExitSegment(zone, result, rescue, segmentID, mapID)
--Engine callback function
function hazy_maze.ExitSegment(zone, result, rescue, segmentID, mapID)
    --DEBUG.EnableDbgCoro() --Enable debugging this coroutine
    --PrintInfo("=>> ExitSegment_secret_gold_gulch result "..tostring(result).." segment "..tostring(segmentID))
  
    --first check for rescue flag; if we're in rescue mode then take a different path
    local exited = COMMON.ExitDungeonMissionCheck(result, rescue, zone.ID, segmentID)
    if exited == true then
        --do nothing
    elseif result ~= RogueEssence.Data.GameProgress.ResultType.Cleared then
        COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
    else
        if segmentID == 0 then
            COMMON.EndDungeonDay(result, 'pmdras_overworld', -1, 1, 0)
            COMMON.UnlockWithFanfare('groundwater_hollow', true)
        elseif segmentID == 1 then
            COMMON.EndDungeonDay(result, 'pmdras_overworld', -1, 1, 0)
            COMMON.UnlockWithFanfare('groundwater_hollow', true)
        elseif segmentID == 2 then
            COMMON.EndDungeonDay(result, 'hazy_maze', -1, 0, 0)
        else
            PrintInfo("No exit procedure found!")
            COMMON.EndDungeonDay(result, SV.checkpoint.Zone, SV.checkpoint.Segment, SV.checkpoint.Map, SV.checkpoint.Entry)
        end
    end
end

---hazy_maze.Rescued(zone, name, mail)
--Engine callback function
function hazy_maze.Rescued(zone, name, mail)


end

return hazy_maze

